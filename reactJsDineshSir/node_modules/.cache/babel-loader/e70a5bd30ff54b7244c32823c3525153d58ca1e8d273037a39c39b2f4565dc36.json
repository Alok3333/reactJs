{"ast":null,"code":"var _jsxFileName = \"/home/alok/Desktop/react-class-session/src/Components/useReducer/useReduce.jsx\",\n  _s = $RefreshSig$();\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = 0;\nconst reducer = (state, action) => {};\nconst UseReducer = () => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(count + 1),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count - 1),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(UseReducer, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = UseReducer;\nexport default UseReducer;\nvar _c;\n$RefreshReg$(_c, \"UseReducer\");","map":{"version":3,"names":["useReducer","initialState","reducer","state","action","UseReducer","dispatch","count","setCount"],"sources":["/home/alok/Desktop/react-class-session/src/Components/useReducer/useReduce.jsx"],"sourcesContent":["import { useReducer } from 'react';\n\nconst initialState = 0;\nconst reducer = (state, action) => {};\n\nconst UseReducer = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <>\n      <p>{count}</p>\n      <div className=\"btn\">\n        <button onClick={() => dispatch(count + 1)}>+</button>\n        <button onClick={() => setCount(count - 1)}>-</button>\n      </div>\n    </>\n  );\n};\n\nexport default UseReducer;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAAC;AAAA;AAEnC,MAAMC,YAAY,GAAG,CAAC;AACtB,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK,CAAC,CAAC;AAErC,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACF,KAAK,EAAEG,QAAQ,CAAC,GAAGN,UAAU,CAACE,OAAO,EAAED,YAAY,CAAC;EAE3D,oBACE;IAAA,wBACE;MAAA,UAAIM;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,eACd;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB;QAAQ,OAAO,EAAE,MAAMD,QAAQ,CAACC,KAAK,GAAG,CAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW,eACtD;QAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAClD;EAAA,gBACL;AAEP,CAAC;AAAC,GAZIF,UAAU;AAAA,KAAVA,UAAU;AAchB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}