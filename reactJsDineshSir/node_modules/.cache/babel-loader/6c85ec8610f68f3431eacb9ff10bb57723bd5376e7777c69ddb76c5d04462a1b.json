{"ast":null,"code":"var _jsxFileName = \"/home/alok/Desktop/react-class-session/src/pages/TodoList/Todolist.jsx\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from 'react';\nimport '../TodoList/TodoList.css';\nimport NewTodo from './NewTodo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst todoListInit = [{\n  userId: 1,\n  id: 1,\n  title: 'delectus aut autem',\n  completed: true\n}, {\n  userId: 1,\n  id: 2,\n  title: 'quis ut nam facilis et officia qui',\n  completed: false\n}, {\n  userId: 1,\n  id: 3,\n  title: 'fugiat veniam minus',\n  completed: false\n}, {\n  userId: 1,\n  id: 4,\n  title: 'et porro tempora',\n  completed: true\n}];\nfunction Todolist() {\n  _s();\n  const [todoList, setTodoList] = useState(todoListInit);\n  const [showNewForm, setShowNewForm] = useState(true);\n  const todoItemChangeStatusHandler = todo => {\n    const updatedTodo = {\n      ...todo,\n      completed: !todo.completed\n    };\n    const todoIndex = todoList.findIndex(todoItem => todoItem.id === todo.id);\n    const updateTodoList = [...todoList];\n    updateTodoList.splice(todoIndex, 1, updatedTodo);\n    setTodoList(updateTodoList);\n  };\n  const formHideShowHandler = () => {\n    setShowNewForm(!showNewForm);\n  };\n  const addNewTodoHandler = newTodo => {\n    setTodoList(prevTodoList => {\n      return [...prevTodoList, newTodo];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"To do list\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: formHideShowHandler,\n        children: showNewForm ? 'Close Form' : 'Add New'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), showNewForm && /*#__PURE__*/_jsxDEV(NewTodo, {\n      onNewToDo: addNewTodoHandler,\n      onHideForm: formHideShowHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todoList.map(todo => {\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            className: todo.completed ? 'completed' : 'not-completed',\n            onClick: () => todoItemChangeStatusHandler(todo),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa-sharp fa-solid fa-rocket\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), todo.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Todolist, \"GFIt2nGXDvUIsHtKnyUl3SCSESc=\");\n_c = Todolist;\nexport default Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","Fragment","useState","NewTodo","todoListInit","userId","id","title","completed","Todolist","todoList","setTodoList","showNewForm","setShowNewForm","todoItemChangeStatusHandler","todo","updatedTodo","todoIndex","findIndex","todoItem","updateTodoList","splice","formHideShowHandler","addNewTodoHandler","newTodo","prevTodoList","map"],"sources":["/home/alok/Desktop/react-class-session/src/pages/TodoList/Todolist.jsx"],"sourcesContent":["import React, { Fragment, useState } from 'react';\nimport '../TodoList/TodoList.css';\nimport NewTodo from './NewTodo';\n\nconst todoListInit = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 3,\n    title: 'fugiat veniam minus',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 4,\n    title: 'et porro tempora',\n    completed: true,\n  },\n];\n\nfunction Todolist() {\n  const [todoList, setTodoList] = useState(todoListInit);\n  const [showNewForm, setShowNewForm] = useState(true);\n\n  const todoItemChangeStatusHandler = (todo) => {\n    const updatedTodo = { ...todo, completed: !todo.completed };\n    const todoIndex = todoList.findIndex((todoItem) => todoItem.id === todo.id);\n    const updateTodoList = [...todoList];\n    updateTodoList.splice(todoIndex, 1, updatedTodo);\n    setTodoList(updateTodoList);\n  };\n  const formHideShowHandler = () => {\n    setShowNewForm(!showNewForm);\n  };\n\n  const addNewTodoHandler = (newTodo) => {\n    setTodoList((prevTodoList) => {\n      return [...prevTodoList, newTodo];\n    });\n  };\n\n  return (\n    <>\n      <h2>\n        To do list{' '}\n        <button onClick={formHideShowHandler}>\n          {showNewForm ? 'Close Form' : 'Add New'}\n        </button>\n      </h2>\n      {showNewForm && (\n        <NewTodo\n          onNewToDo={addNewTodoHandler}\n          onHideForm={formHideShowHandler}\n        />\n      )}\n\n      <ul className=\"todo-list\">\n        {todoList.map((todo) => {\n          return (\n            <Fragment key={todo.id}>\n              {/* <li key={todo.id}>\n              {todo.completed ? <del>{todo.title}</del> : <>{todo.title}</>}\n            </li> */}\n              <li\n                className={todo.completed ? 'completed' : 'not-completed'}\n                onClick={() => todoItemChangeStatusHandler(todo)}\n              >\n                <i className=\"fa-sharp fa-solid fa-rocket\"></i>\n                {todo.title}\n              </li>\n            </Fragment>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport default Todolist;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AACjD,OAAO,0BAA0B;AACjC,OAAOC,OAAO,MAAM,WAAW;AAAC;AAAA;AAEhC,MAAMC,YAAY,GAAG,CACnB;EACEC,MAAM,EAAE,CAAC;EACTC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,oBAAoB;EAC3BC,SAAS,EAAE;AACb,CAAC,EACD;EACEH,MAAM,EAAE,CAAC;EACTC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,oCAAoC;EAC3CC,SAAS,EAAE;AACb,CAAC,EACD;EACEH,MAAM,EAAE,CAAC;EACTC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,qBAAqB;EAC5BC,SAAS,EAAE;AACb,CAAC,EACD;EACEH,MAAM,EAAE,CAAC;EACTC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,kBAAkB;EACzBC,SAAS,EAAE;AACb,CAAC,CACF;AAED,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAACE,YAAY,CAAC;EACtD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAMY,2BAA2B,GAAIC,IAAI,IAAK;IAC5C,MAAMC,WAAW,GAAG;MAAE,GAAGD,IAAI;MAAEP,SAAS,EAAE,CAACO,IAAI,CAACP;IAAU,CAAC;IAC3D,MAAMS,SAAS,GAAGP,QAAQ,CAACQ,SAAS,CAAEC,QAAQ,IAAKA,QAAQ,CAACb,EAAE,KAAKS,IAAI,CAACT,EAAE,CAAC;IAC3E,MAAMc,cAAc,GAAG,CAAC,GAAGV,QAAQ,CAAC;IACpCU,cAAc,CAACC,MAAM,CAACJ,SAAS,EAAE,CAAC,EAAED,WAAW,CAAC;IAChDL,WAAW,CAACS,cAAc,CAAC;EAC7B,CAAC;EACD,MAAME,mBAAmB,GAAG,MAAM;IAChCT,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EAED,MAAMW,iBAAiB,GAAIC,OAAO,IAAK;IACrCb,WAAW,CAAEc,YAAY,IAAK;MAC5B,OAAO,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC;IACnC,CAAC,CAAC;EACJ,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,yBACa,GAAG,eACd;QAAQ,OAAO,EAAEF,mBAAoB;QAAA,UAClCV,WAAW,GAAG,YAAY,GAAG;MAAS;QAAA;QAAA;QAAA;MAAA,QAChC;IAAA;MAAA;MAAA;MAAA;IAAA,QACN,EACJA,WAAW,iBACV,QAAC,OAAO;MACN,SAAS,EAAEW,iBAAkB;MAC7B,UAAU,EAAED;IAAoB;MAAA;MAAA;MAAA;IAAA,QAEnC,eAED;MAAI,SAAS,EAAC,WAAW;MAAA,UACtBZ,QAAQ,CAACgB,GAAG,CAAEX,IAAI,IAAK;QACtB,oBACE,QAAC,QAAQ;UAAA,uBAIP;YACE,SAAS,EAAEA,IAAI,CAACP,SAAS,GAAG,WAAW,GAAG,eAAgB;YAC1D,OAAO,EAAE,MAAMM,2BAA2B,CAACC,IAAI,CAAE;YAAA,wBAEjD;cAAG,SAAS,EAAC;YAA6B;cAAA;cAAA;cAAA;YAAA,QAAK,EAC9CA,IAAI,CAACR,KAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QACR,GAVQQ,IAAI,CAACT,EAAE;UAAA;UAAA;UAAA;QAAA,QAWX;MAEf,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA,gBACJ;AAEP;AAAC,GAxDQG,QAAQ;AAAA,KAARA,QAAQ;AA0DjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}